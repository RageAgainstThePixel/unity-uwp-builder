name: validate
on:
  push:
    branches:
      - 'main'
  pull_request:
    branches:
      - '*'
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
jobs:
  unity-build:
    name: '${{ matrix.build-target }} ${{ matrix.unity-versions }}'
    env:
      UNITY_PROJECT_PATH: '' # set by unity-setup action
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest]
        build-target: [WSAPlayer]
        unity-versions: [2021.x, 2022.x, 6000.x]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/checkout@v4
        with:
          repository: RageAgainstThePixel/com.utilities.encoder.wav
          path: 'com.utilities.encoder.wav'
          ref: test
      - uses: RageAgainstThePixel/unity-setup@v1
        with:
          unity-version: ${{ matrix.unity-versions }}
          build-targets: ${{ matrix.build-target }}
          version-file: '${{ github.workspace }}/com.utilities.encoder.wav/Utilities.Encoder.Wav/ProjectSettings/ProjectVersion.txt'
      - uses: RageAgainstThePixel/activate-unity-license@v1
        with:
          license: 'Personal'
          username: ${{ secrets.UNITY_USERNAME }}
          password: ${{ secrets.UNITY_PASSWORD }}
      - uses: RageAgainstThePixel/unity-action@v1
        name: '${{ matrix.build-target }}-Validate'
        with:
          log-name: '${{ matrix.build-target }}-Validate'
          args: '-quit -nographics -batchmode -executeMethod Utilities.Editor.BuildPipeline.UnityPlayerBuildTools.ValidateProject -importTMProEssentialsAsset'
      - uses: RageAgainstThePixel/unity-action@v1
        name: '${{ matrix.build-target }}-Test'
        with:
          log-name: '${{ matrix.build-target }}-Test'
          build-target: ${{ matrix.build-target }}
          args: '-nographics -batchmode -runTests -testPlatform EditMode -testResults "${{ github.workspace }}/Logs/${{ matrix.build-target }}-results.xml"'
      - uses: RageAgainstThePixel/unity-action@v1
        name: '${{ matrix.build-target }}-Build'
        with:
          log-name: '${{ matrix.build-target }}-Build'
          args: '-quit -nographics -batchmode -executeMethod Utilities.Editor.BuildPipeline.UnityPlayerBuildTools.StartCommandLineBuild -arch ARM64'

      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'
      - uses: microsoft/setup-msbuild@v2

        # builds visual studio project for UWP and packages it as an appx
      - uses: ./ # RageAgainstThePixel/unity-uwp-builder
        id: uwp-build
        with:
          project-path: ${{ env.UNITY_PROJECT_PATH }}/Builds/WSAPlayer
          configuration: 'Release'
          architecture: 'ARM64'

      - name: print outputs
        shell: pwsh
        run: |
          Write-Output "Executable: $(${{ steps.uwp-build.outputs.executable }})"
          Write-Output "Export path: ${{ steps.uwp-build.outputs.export-path }}"
          Get-ChildItem -Path ${{ steps.uwp-build.outputs.export-path }} -Force
